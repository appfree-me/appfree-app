<?php
declare(strict_types=1);


namespace AppFree\appfree\modules\MvgRad;

use AppFree\AppFreeCommands\AppFreeDto;
use Exception;
use Finite\StateMachine\StateMachine;
use Monolog\Logger;

class MvgRadStateMachine extends AppFreeStateMachine
{
    public function done(string $wantedState, ?AppFreeDto $dtoForWantedState): void
    {
        $transitionName = $this->getNextTransition($wantedState);
        /** @var Logger $logger */
        $logger = resolve(Logger::class);
        $logger->debug("Transition " . $transitionName);
        $this->apply($transitionName, [MvgRadStateMachineLoader::DTO => $dtoForWantedState]); // nächste transition finden
        // todo lp: mit charlotte besprechen
    }

    /**
     * Transitions are named strings generated by MvgRadStateMachineLoader::nameTransition()
     * Return transition to given $nextState if possible, otherwise check if there is only one possible
     * transition and return it.
     * Todo: Define transitions by From-State, To-State, Expected Data to be passed - then it should be
     * possible in the majority of cases to deduce the required transition automatically
     *
     * @param string|null $nextState class-string
     * @return string
     * @throws Exception
     */
    public function getNextTransition(string $nextState = null): string
    {
        $currentState = $this->getCurrentState();
        $fromTransitions = $currentState->getTransitions();
        $wantedTransition = MvgRadStateMachineLoader::nameTransition($currentState->getName(), $nextState);

        if ($this->can($wantedTransition)) {
            return $wantedTransition;
        }

        //fixme - transition muss abhängig sein von result des letzten zustands
        if (count($fromTransitions) !== 1) {
            throw new Exception("Next state not defined");
        }

        return $fromTransitions[0];
    }
}
